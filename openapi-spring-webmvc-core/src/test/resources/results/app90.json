{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/test": {
      "get": {
        "tags": [
          "hello-controller"
        ],
        "operationId": "test1",
        "parameters": [
          {
            "name": "hello",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "500": {
                    "$ref": "#/components/examples/http500Example"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/test2": {
      "post": {
        "tags": [
          "hello-controller"
        ],
        "operationId": "test2",
        "requestBody": {
          "description": "Details of the Item to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "An example request with the minimum required fields to create.": {
                  "summary": "Minimal request",
                  "description": "An example request with the minimum required fields to create.",
                  "value": "min"
                },
                "An example request with all fields provided with example values.": {
                  "summary": "Full request",
                  "description": "An example request with all fields provided with example values.",
                  "value": "full"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "username": {
            "type": "string",
            "example": "theUser"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "James"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          },
          "phone": {
            "type": "string",
            "example": "12345"
          },
          "userStatus": {
            "type": "integer",
            "description": "User Status",
            "format": "int32",
            "example": 1
          }
        }
      }
    },
    "examples": {
      "http500Example": {
        "summary": "HTTP 500 JSON Body response example",
        "description": "An example of HTTP response in case an error occurs on server side. instance attribute reference a traceId to ease server side analysis.",
        "value": "{\"500\":{\"$ref\":\"#/components/examples/http500Example\"}}"
      }
    }
  }
}
